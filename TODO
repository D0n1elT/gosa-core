Things to fix before 2.4:
=========================

* Finish kolab integration
  - shared folders

* Fix problem with winstation and invalid structural object class chain (inetOrgPerson/device)

* Deparment dialog
  - adapt base when creating a new department
  - show different symbol when the department contains subdepartments

* User dialog
  - adapt base when creating a new user/template
  - Add button for template created users

* Systems dialog
  - Add buttons for all system types
  
* All dialogs
  - adapt base when creating a new entity
  - cleanup, remove not used code fragments
  - &nbsp; between pictures ... if needed (convert_list ? )
  - ALT not translated 

* include/class_mail-methods-kolab.inc -> gosaMailQuota not defined when opening "cajus"

* Autofs entries cannot be removed

* Minimize "reload" calls during post of depselect in all plugins


Target for 2.5:
===============

* Complete PHP5 compliance and optimization

* Simplify plugins by providing a schema parser

* Remove smarty from SVN. It has an own repository.

* Replace PHP IMAP module by self made module

* Add possibility to add referrals in department dialog

* Add sambaWorkingHours

* Fine tuning in Kerberos support
  Special kerberos attributes like ticket expiery and policies can't
  be handeled with GOsa right now this has to be added in later releases.
  
* Server-/Workstation management
  This has been removed because of inconsistencies. Will be back soon:
  - support for dhcp
  - attributes for ldap-, ntp-, nfs-, imap- and print-servers

* SSL
  User certificates are only shown as "absent" or "present", because the
  SSL PHP module isn't buildable in the moment. I'll check this later on.
    (Notes:
     openssl x509 -outform DER -in incert.pem  -out outcert.der
     ldif -b "usercertificate;binary" < outcert.der   > cert.ldif
     print_r(openssl_x509_parse ($this->userCertificate));
    )
    
* Rework ACL stuff, use experimental (native) LDAP ACLs / get ACLs from classes
  The complete ACL dialog stinks. If every dialog is done by smarty, we could
  use a shrinked version of each dialog with checkboxes, to let the admin decide
  what fields could be edited.

* Documentation
  - End user documentation: online help
  - Administrators documentation: how to install / contributed scripts, etc.
  - Developer documentation: how to extend, own plugins, themes, etc.

* amavis-new support

* Automatic passwords?
  Generate a password for a newly created user and display it.

* Make IMAP namespace configurable

* Try RDN style for unique names

* Object Groups should have member tabs depending of the grouped object types


Target > 2.3:
=============

* OpenAFS support
  Still completely missing...
  
